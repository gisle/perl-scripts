#!/usr/local/bin/perl

# This program manipulates the X keymapping to include easy typing of
# ISO8859/1 characters.
#
# Based on a versjon by Dag Asheim (dash).
#
# $Id$

# parse command line options
while ($_ = shift) {
   $noop = 1, next if $_ eq "-n";
   
   ($progname = $0) =~ s#^.*/##;
   die "Usage: $progname [-n]\n";
}

@keyfiles = ( "./keyfile",
	      "$ENV{HOME}/keyfile",
	      "/local/lib/X11/xinit/keyfile");
for $keyfile (@keyfiles) { open(KEYFILE, $keyfile) && ($ok = 1, last); }
die "Can't open any of @keyfiles" unless $ok;

while(<KEYFILE>) {
   s/#.*//;  # allow comments
   if (/^\s*([^=\s]+)\s*=\s*(\S+)/)
	{ $alt{$1} = $2; }
   elsif (/^\s*([^=\s]+)\s+([^=\s]+)\s*=\s*([^=\s]+)\s+(\S+)/)
	{ $alt{"$1;$2"} = "$3 $4"; }
}
close KEYFILE;

$one='\s+0x[\da-fA-F]+\s+\(([^)]+)\)';
open(KEYS, "xmodmap -pk|") || die "Can't run xmodmap";

unless ($noop) {
  open(OUT, "|xmodmap -") || die "Can't run xmodmap";
  select OUT;
}

while(<KEYS>) {
  $s3 = $s4 = $ns1 = $ns2 = $ns3 = $ns4 = undef;
  
  if (/^\s+(\d+)$one($one)?($one)?($one)?/) { 
    $code = $1;
    $ns1 = $2; 
    $ns2 = $4 if defined $4;
    $s3  = $6 if defined $6;
    $s4  = $8 if defined $8;
    unless (defined($ns2)) {
      $ns2 = $ns1;
      $ns1 = "\l$ns1" if length $ns1 == 1;
    }
    $ns3 = $alt{$ns1} if defined $alt{$ns1};
    $ns4 = $alt{$ns2} if defined $alt{$ns2};
    ($ns3,$ns4) = split(" ", $alt{"$ns1;$ns2"}) if defined $alt{"$ns1;$ns2"};
    $ns3 = $ns4 if defined $ns4 && !defined $ns3;
    ($ns1,$ns2) = ($ns2,undef)
	if (!defined $ns4 && !defined $ns3 && $ns1 eq "\l$ns2");
    print "keycode $code = $ns1 $ns2 $ns3 $ns4\n"
	if $ns3 ne $s3 || $ns4 ne $s4;
  }
}
